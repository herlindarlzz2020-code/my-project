  // src/pages/JobSeekerDashboard.jsx
import React, { useEffect, useState } from "react";
import axios from "axios";

const JobSeekerDashboard = () => {
  const [jobs, setJobs] = useState([]);
  const [profile, setProfile] = useState(null);
  const [profileData, setProfileData] = useState({ name: "", skills: "" });
  const token = localStorage.getItem("token");

  useEffect(() => {
    fetchJobs();
    fetchProfile();
  }, []);

  const fetchJobs = async () => {
    try {
      const res = await axios.get("http://localhost:5290/api/Job", {
        headers: { Authorization: `Bearer ${token}` },
      });
      setJobs(res.data);
    } catch (err) {
      console.error("Error fetching jobs", err);
    }
  };

  const fetchProfile = async () => {
    try {
      const res = await axios.get("http://localhost:5290/api/JobSeekerProfile", {
        headers: { Authorization: `Bearer ${token}` },
      });
      setProfile(res.data);
    } catch (err) {
      console.log("No profile yet.");
    }
  };

  const createProfile = async () => {
    try {
      const res = await axios.post("http://localhost:5290/api/JobSeekerProfile", profileData, {
        headers: { Authorization: `Bearer ${token}` },
      });
      setProfile(res.data);
      alert("Profile created successfully!");
    } catch (err) {
      console.error("Error creating profile", err);
    }
  };

  const deleteProfile = async () => {
    try {
      await axios.delete(`http://localhost:5290/api/JobSeekerProfile/${profile.id}`, {
        headers: { Authorization: `Bearer ${token}` },
      });
      setProfile(null);
      alert("Profile deleted.");
    } catch (err) {
      console.error("Error deleting profile", err);
    }
  };

  const applyJob = async (jobId) => {
    try {
      await axios.post(
        "http://localhost:5290/api/JobApplication",
        { jobId },
        { headers: { Authorization: `Bearer ${token}` } }
      );
      alert("Applied successfully!");
    } catch (err) {
      console.error("Error applying job", err);
    }
  };

  return (
    <div className="h-screen w-screen bg-gradient-to-r from-blue-500 to-indigo-600 flex items-center justify-center">
      <div className="bg-white/20 backdrop-blur-lg rounded-2xl shadow-xl w-3/4 p-8 text-white">
        <h1 className="text-3xl font-bold mb-6">JobSeeker Dashboard</h1>

        {/* Profile Section */}
        {profile ? (
          <div>
            <p><b>Name:</b> {profile.name}</p>
            <p><b>Skills:</b> {profile.skills}</p>
            <button onClick={deleteProfile} className="mt-3 px-4 py-2 bg-red-500 rounded-lg hover:bg-red-600">Delete Profile</button>
          </div>
        ) : (
          <div>
            <input
              type="text"
              placeholder="Name"
              className="p-2 rounded text-black mr-2"
              onChange={(e) => setProfileData({ ...profileData, name: e.target.value })}
            />
            <input
              type="text"
              placeholder="Skills"
              className="p-2 rounded text-black mr-2"
              onChange={(e) => setProfileData({ ...profileData, skills: e.target.value })}
            />
            <button onClick={createProfile} className="px-4 py-2 bg-green-500 rounded-lg hover:bg-green-600">Create Profile</button>
          </div>
        )}

        {/* Jobs Section */}
        <h2 className="text-2xl mt-6">Available Jobs</h2>
        <ul>
          {jobs.map((job) => (
            <li key={job.id} className="mt-3 p-3 bg-white/30 rounded-lg flex justify-between">
              <span>{job.title} - {job.description}</span>
              <button onClick={() => applyJob(job.id)} className="px-3 py-1 bg-blue-500 rounded-lg hover:bg-blue-600">Apply</button>
            </li>
          ))}
        </ul>
      </div>
    </div>
  );
};

export default JobSeekerDashboard;

// src/pages/EmployerDashboard.jsx
import React, { useEffect, useState } from "react";
import axios from "axios";

const EmployerDashboard = () => {
  const [jobs, setJobs] = useState([]);
  const [applications, setApplications] = useState([]);
  const [jobData, setJobData] = useState({ title: "", description: "" });
  const token = localStorage.getItem("token");

  useEffect(() => {
    fetchJobs();
    fetchApplications();
  }, []);

  const fetchJobs = async () => {
    try {
      const res = await axios.get("http://localhost:5290/api/Job", {
        headers: { Authorization: `Bearer ${token}` },
      });
      setJobs(res.data);
    } catch (err) {
      console.error("Error fetching jobs", err);
    }
  };

  const fetchApplications = async () => {
    try {
      const res = await axios.get("http://localhost:5290/api/JobApplication", {
        headers: { Authorization: `Bearer ${token}` },
      });
      setApplications(res.data);
    } catch (err) {
      console.error("Error fetching applications", err);
    }
  };

  const postJob = async () => {
    try {
      await axios.post("http://localhost:5290/api/Job", jobData, {
        headers: { Authorization: `Bearer ${token}` },
      });
      fetchJobs();
      alert("Job posted successfully!");
    } catch (err) {
      console.error("Error posting job", err);
    }
  };

  return (
    <div className="h-screen w-screen bg-gradient-to-r from-purple-500 to-pink-600 flex items-center justify-center">
      <div className="bg-white/20 backdrop-blur-lg rounded-2xl shadow-xl w-3/4 p-8 text-white">
        <h1 className="text-3xl font-bold mb-6">Employer Dashboard</h1>

        {/* Post Job */}
        <div className="mb-6">
          <input
            type="text"
            placeholder="Job Title"
            className="p-2 rounded text-black mr-2"
            onChange={(e) => setJobData({ ...jobData, title: e.target.value })}
          />
          <input
            type="text"
            placeholder="Description"
            className="p-2 rounded text-black mr-2"
            onChange={(e) => setJobData({ ...jobData, description: e.target.value })}
          />
          <button onClick={postJob} className="px-4 py-2 bg-green-500 rounded-lg hover:bg-green-600">Post Job</button>
        </div>

        {/* Applications */}
        <h2 className="text-2xl">Applications</h2>
        <ul>
          {applications.map((app) => (
            <li key={app.id} className="mt-3 p-3 bg-white/30 rounded-lg">
              <p><b>Job ID:</b> {app.jobId}</p>
              <p><b>Applicant:</b> {app.jobSeekerName}</p>
            </li>
          ))}
        </ul>
      </div>
    </div>
  );
};

export default EmployerDashboard;

  
